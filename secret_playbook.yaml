- hosts: 127.0.0.1
  connection: local
  remote_user: dzigen
  vars:
    - pwd: "{{ lookup('env', 'PWD') }}"

  tasks:
    - name: up modelapi-service
      shell:
        cmd: "KAFKA_BROKER_ID={{ KAFKA_BROKER_ID }} \
        KAFKA_ZOOKEEPER_CONNECT={{ KAFKA_ZOOKEEPER_CONNECT }} \
        KAFKA_ADVERTISED_LISTENERS={{ KAFKA_ADVERTISED_LISTENERS }} \
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP={{ KAFKA_LISTENER_SECURITY_PROTOCOL_MAP }} \
        KAFKA_INTER_BROKER_LISTENER_NAME={{ KAFKA_INTER_BROKER_LISTENER_NAME }} \
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR={{ KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }} \
        ZOOKEEPER_CLIENT_PORT={{ ZOOKEEPER_CLIENT_PORT }} \
        ZOOKEEPER_TICK_TIME={{ ZOOKEEPER_TICK_TIME }} \
        MONGO_INITDB_ROOT_USERNAME={{ MONGO_INITDB_ROOT_USERNAME }} \
        MONGO_INITDB_ROOT_PASSWORD={{ MONGO_INITDB_ROOT_PASSWORD }} \
        ME_CONFIG_BASICAUTH_USERNAME={{ ME_CONFIG_BASICAUTH_USERNAME }} \
        ME_CONFIG_BASICAUTH_PASSWORD={{ ME_CONFIG_BASICAUTH_PASSWORD }} \
        ME_CONFIG_MONGODB_PORT={{ ME_CONFIG_MONGODB_PORT }} \
        ME_CONFIG_MONGODB_ADMINUSERNAME={{ ME_CONFIG_MONGODB_ADMINUSERNAME }} \
        ME_CONFIG_MONGODB_ADMINPASSWORD={{ ME_CONFIG_MONGODB_ADMINPASSWORD }} \
        ME_CONFIG_MONGODB_SERVER={{ ME_CONFIG_MONGODB_SERVER }} \
        MODELAPI_VAULT_PASS={{ MODELAPI_VAULT_PASS }} \
        KAFKADB_CONN_VAULT_PASS={{ KAFKADB_CONN_VAULT_PASS }} \
        sh -c 'docker-compose up -d modelapi'"
        chdir: "{{ pwd }}"
      register: out
      tags:
        - up_modelapi

    - name: build modelapi-image
      shell:
        cmd: "sh -c 'docker-compose build --no-cache modelapi'"
        chdir: "{{ pwd }}"
      register: out
      tags:
        - build_modelapi

    - name: build kafkadb-image
      shell:
        cmd: "sh -c 'docker-compose build --no-cache kafkadb_connector'"
        chdir: "{{ pwd }}"
      register: out
      tags:
        - build_kafkadb

    - name: up kafkadb-image
      shell:
        cmd: "KAFKA_BROKER_ID={{ KAFKA_BROKER_ID }} \
        KAFKA_ZOOKEEPER_CONNECT={{ KAFKA_ZOOKEEPER_CONNECT }} \
        KAFKA_ADVERTISED_LISTENERS={{ KAFKA_ADVERTISED_LISTENERS }} \
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP={{ KAFKA_LISTENER_SECURITY_PROTOCOL_MAP }} \
        KAFKA_INTER_BROKER_LISTENER_NAME={{ KAFKA_INTER_BROKER_LISTENER_NAME }} \
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR={{ KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }} \
        ZOOKEEPER_CLIENT_PORT={{ ZOOKEEPER_CLIENT_PORT }} \
        ZOOKEEPER_TICK_TIME={{ ZOOKEEPER_TICK_TIME }} \
        MONGO_INITDB_ROOT_USERNAME={{ MONGO_INITDB_ROOT_USERNAME }} \
        MONGO_INITDB_ROOT_PASSWORD={{ MONGO_INITDB_ROOT_PASSWORD }} \
        ME_CONFIG_BASICAUTH_USERNAME={{ ME_CONFIG_BASICAUTH_USERNAME }} \
        ME_CONFIG_BASICAUTH_PASSWORD={{ ME_CONFIG_BASICAUTH_PASSWORD }} \
        ME_CONFIG_MONGODB_PORT={{ ME_CONFIG_MONGODB_PORT }} \
        ME_CONFIG_MONGODB_ADMINUSERNAME={{ ME_CONFIG_MONGODB_ADMINUSERNAME }} \
        ME_CONFIG_MONGODB_ADMINPASSWORD={{ ME_CONFIG_MONGODB_ADMINPASSWORD }} \
        ME_CONFIG_MONGODB_SERVER={{ ME_CONFIG_MONGODB_SERVER }} \
        KAFKADB_CONN_VAULT_PASS={{ KAFKADB_CONN_VAULT_PASS }} \
        sh -c 'docker-compose up -d kafkadb_connector'"
        chdir: "{{ pwd }}"
      register: out
      tags:
        - up_kafkadb

    - name: up kafka-image
      shell:
        cmd: "KAFKA_BROKER_ID={{ KAFKA_BROKER_ID }} \
        KAFKA_ZOOKEEPER_CONNECT={{ KAFKA_ZOOKEEPER_CONNECT }} \
        KAFKA_ADVERTISED_LISTENERS={{ KAFKA_ADVERTISED_LISTENERS }} \
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP={{ KAFKA_LISTENER_SECURITY_PROTOCOL_MAP }} \
        KAFKA_INTER_BROKER_LISTENER_NAME={{ KAFKA_INTER_BROKER_LISTENER_NAME }} \
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR={{ KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }} \
        ZOOKEEPER_CLIENT_PORT={{ ZOOKEEPER_CLIENT_PORT }} \
        ZOOKEEPER_TICK_TIME={{ ZOOKEEPER_TICK_TIME }} \
        sh -c 'docker-compose up -d kafka'"
        chdir: "{{ pwd }}"
      register: out
      tags:
        - up_kafka

    - name: build test_modelapi-images
      shell:
        cmd: "sh -c 'docker-compose build --no-cache test_modelapi'"
        chdir: "{{ pwd }}"
      register: out
      tags:
        - build_test_modelapi

    - name: up test_modelapi-service
      shell:
        cmd: "KAFKA_BROKER_ID={{ KAFKA_BROKER_ID }} \
        KAFKA_ZOOKEEPER_CONNECT={{ KAFKA_ZOOKEEPER_CONNECT }} \
        KAFKA_ADVERTISED_LISTENERS={{ KAFKA_ADVERTISED_LISTENERS }} \
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP={{ KAFKA_LISTENER_SECURITY_PROTOCOL_MAP }} \
        KAFKA_INTER_BROKER_LISTENER_NAME={{ KAFKA_INTER_BROKER_LISTENER_NAME }} \
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR={{ KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }} \
        ZOOKEEPER_CLIENT_PORT={{ ZOOKEEPER_CLIENT_PORT }} \
        ZOOKEEPER_TICK_TIME={{ ZOOKEEPER_TICK_TIME }} \
        MONGO_INITDB_ROOT_USERNAME={{ MONGO_INITDB_ROOT_USERNAME }} \
        MONGO_INITDB_ROOT_PASSWORD={{ MONGO_INITDB_ROOT_PASSWORD }} \
        ME_CONFIG_BASICAUTH_USERNAME={{ ME_CONFIG_BASICAUTH_USERNAME }} \
        ME_CONFIG_BASICAUTH_PASSWORD={{ ME_CONFIG_BASICAUTH_PASSWORD }} \
        ME_CONFIG_MONGODB_PORT={{ ME_CONFIG_MONGODB_PORT }} \
        ME_CONFIG_MONGODB_ADMINUSERNAME={{ ME_CONFIG_MONGODB_ADMINUSERNAME }} \
        ME_CONFIG_MONGODB_ADMINPASSWORD={{ ME_CONFIG_MONGODB_ADMINPASSWORD }} \
        ME_CONFIG_MONGODB_SERVER={{ ME_CONFIG_MONGODB_SERVER }} \
        MODELAPI_VAULT_PASS={{ MODELAPI_VAULT_PASS }} \
        KAFKADB_CONN_VAULT_PASS={{ KAFKADB_CONN_VAULT_PASS }} \
        sh -c 'docker-compose up test_modelapi'"
        chdir: "{{ pwd }}"
      register: out
      tags:
        - up_test_modelapi

    - debug:
        var: out.stdout_lines